<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>


    <link rel="stylesheet" media="all" href="https://cdn.jsdelivr.net/npm/bootstrap@3.4.1/dist/css/bootstrap.min.css"
    integrity="sha256-bZLfwXAP04zRMK2BjiO8iu9pf4FbLqX6zitd+tIvLhE=" crossorigin="anonymous" />
    <!-- Bootstrap 5 CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">

    <!-- <link rel="stylesheet" media="all" href="/css/styles2.css" /> -->
    <link rel="stylesheet" media="all" href="/css/styles3.css" />
   <link rel="stylesheet" media="all" href="/css/stylesheet-override2.css" />
 
 
   <link rel="stylesheet" media="all" href="https://fonts.googleapis.com/css2?family=Lato:wght@100;300;400;700;900&amp;display=swap" />
   <link rel="stylesheet" media="all" href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&amp;display=swap" />
 
   <script src="https://kit.fontawesome.com/da8d22a218.js" crossorigin="anonymous"></script>
   <script src="https://unpkg.com/leaflet.gridlayer.googlemutant@latest/dist/Leaflet.GoogleMutant.js"></script>

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.1/leaflet.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.1/leaflet-src.js"></script>

<!-- <script src="https://raruto.github.io/cdn/leaflet-google/0.0.3/leaflet-google.js" defer></script> -->


<!-- Google Maps JavaScript API (Replace with your API Key) -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCUt0Sdti_Aderhux8JNiFR-6ClvNIb7Gk"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>


</head>
<body>




    <main>
        <%- include('partials/header') %>



 <div class="container-fluid ml-2 mr-2">
  <div class="row">
   <!-- ### start left map column  -->
    <div class="col-md-9">


<!-- ### start MAP MAIN  -->
<div class="exp-map">
    <div class="container-fluid">
             <div class="row">
                        <div class="col-12 col-sm-12 col-md-2 order-md-1 order-2">
                            <form>
                                <div class="row">
                                    <div class="col-6 col-sm-6 col-md-12 mt-2">
                                        <div class="form-group">
                                            <label><strong>Start Date</strong></label>
                                            <input type="date" class="form-control" id="start" />
                                        </div>
                                    </div>
                
                                    <div class="col-6 col-sm-6 col-md-12 mt-2">
                                        <div class="form-group">
                                            <label><strong>End Date</strong></label>
                                            <input type="date" class="form-control" id="end" />
                                        </div>
                                    </div>
                                </div>
                
                                <div class="form-group d-flex flex-column mt-4 mb-4" id="constructionType">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="all">
                                        <label class="form-check-label" for="all">All</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="fullHighway">
                                        <label class="form-check-label" for="fullHighway">Full highway closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="partialHighway">
                                        <label class="form-check-label" for="partialHighway">Partial highway closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="streetLane">
                                        <label class="form-check-label" for="streetLane">Street and lane closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="trail">
                                        <label class="form-check-label" for="trail">Trail closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="ramp">
                                        <label class="form-check-label" for="ramp">Ramp closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="highImpact">
                                        <label class="form-check-label" for="highImpact">High-impact construction</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="cameras">
                                        <label class="form-check-label" for="cameras">Cameras</label>
                                    </div>
                                </div>
                                        
                                <button type="submit" class="btn-success greenBtn" style="background-color: rgb(0, 76, 63);
                                margin-bottom: 14px; align-self: center; border-radius: 5px;">Submit</button>
                            </form>
                        </div>
                
                        <div class="col-12 col-sm-12 col-md-10 order-md-2 order-1">
                            <div id="map" style="min-height: 750px; max-height: 755px; width: 100%;"></div>
                        </div>
                    </div>
                </div>
          
            </div>
    <!-- ## END construction map  -->




    </div>
   <!-- ### EMD left map column  -->

      <!-- ### start right sidebar column  -->
  <div class="col-md-3">


  </div>
     <!-- ### start right sidebar column  -->

 </div>
  <!-- ### END top maps & sidebar  -->

<!-- 3 card container start  -->
<%- include('partials/horizontal-cards') %>

</div>





</main>

  
 <!-- ## Start footer ###  -->
 <%- include('partials/footer') %>

<!-- ### End footer ### -->






<!-- GoogleMutant Plugin -->

 
<!-- Leaflet JS -->

<!-- <script src="https://unpkg.com/leaflet.gridlayer.googlemutant@0.13.3/Leaflet.GoogleMutant.js"></script> -->

<script>
    // const map = L.map('map').setView([47.6407, -122.2971], 13);
    
    var map = new L.Map('map', {
    center: [47.6407, -122.2971],
    zoom: 13,
    markerZoomAnimation: false,
    zoomControl: false
  });

  var zoomControl = new L.Control.Zoom({ position: 'topright' });

  var ggl = new L.Google('ROADMAP'); // Possible types: SATELLITE, ROADMAP, HYBRID, TERRAIN

  var url = 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',
    attr =
    'Map data: &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, <a href="http://viewfinderpanoramas.org">SRTM</a> | Map style: &copy; <a href="https://opentopomap.org">OpenTopoMap</a> (<a href="https://creativecommons.org/licenses/by-sa/3.0/">CC-BY-SA</a>)',
    otm = new L.TileLayer(url, {
      attribution: attr,
      /*subdomains:"1234"*/
    });

  var baseLayers = {
    "Google Map": ggl,
    "Leaflet Map": otm,
  };

  var layersControl = L.control.layers(baseLayers, null, { collapsed:false });

  layersControl.addTo(map);
  zoomControl.addTo(map);

  map.addLayer(ggl);
    // const googleLayer = new L.Google('ROADMAP'); // Can be ROADMAP, SATELLITE, HYBRID, or TERRAIN
    //  map.addLayer(googleLayer);

    // L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    const activityIcons = {
        "Full highway closure": "https://sr520construction.blob.core.windows.net/520-uploads/whitedash-onred.png",
        "Partial highway closure": "https://sr520construction.blob.core.windows.net/520-uploads/whitedash-onred.png",
        "Street and lane closure": "https://sr520construction.blob.core.windows.net/520-uploads/whitedash-onred.png",
        "Ramp closure": "https://sr520construction.blob.core.windows.net/520-uploads/whitedash-onred.png",
        "High-impact construction": "https://sr520construction.blob.core.windows.net/520-uploads/high_impact_construction.png",
        "Trail closure": "https://sr520construction.blob.core.windows.net/520-uploads/trail_closure.png",
        "Cameras": "https://sr520construction.blob.core.windows.net/520-uploads/icon_Camera.png"
    };

    function fetchMapData(startDate = '', endDate = '', types = []) {
        let apiUrl = `/api/projects?startDate=${startDate}&endDate=${endDate}&types=${types.join(",")}`;
        console.log('Fetching data from:', apiUrl);

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                console.log('Data received:', data);
                if (data && data.length > 0) {
                    data.forEach(project => {
                        if (typeof project.mapData !== 'string') {
                            console.warn(`Invalid mapData for project with ID ${project._id}`);
                            return;
                        }

                        const geoJSONData = JSON.parse(project.mapData);
                        const formattedStartDate = moment(project.startDate).format('MM/DD/YYYY');
                        const formattedEndDate = moment(project.endDate).format('MM/DD/YYYY');
                        const timingFeaturesHTML = project.timingFeatures.map(feature => `
                            <img src="https://sr520construction.blob.core.windows.net/520-uploads/checked_mark.png" alt="Checked Mark" width="25" height="25">
                            ${feature}
                            `).join(' ');

                        const popupContent = `
                          <div class="popup-content">
                                <h5 style='font-size: 18px; color: #007b5f; font-weight: 600; padding: 4px;'>${project.activityName}</h5>
                                <p><span style="font-weight: 600">Start:</span> ${formattedStartDate}<br>
                                <span style="font-weight: 600">End:</span> ${formattedEndDate}<br>
                                <span style="font-weight: 600">Time:</span> ${project.time}</p>
                                <div class="timing-features mt-2 mb-4">${timingFeaturesHTML}</div>
                                <a href="/projects/${project._id}" class="greenBtn mt-3 mb-2" style="background-color: #cbdcb2; padding: 10px; color: #000; font-weight: 600; border-radius: 5px;" target="_blank">More information</a>
                                <p class="mt-3">${project.description || "Not specified"}</p>
                                ${project.imageUrl ? `<img src="${project.imageUrl}" alt="Image for ${project.activityName}" class="img-fluid popup-image">` : ''}
                            </div>
                        `;

                        const iconUrl = activityIcons[project.activityType[0]];
                        if (!iconUrl) {
                            console.warn(`No icon URL found for type: ${project.activityType[0]}`);
                            return;
                        }

                        const customIcon = L.icon({
                            iconUrl: iconUrl,
                            iconSize: [25, 25],
                            iconAnchor: [12, 41],
                            popupAnchor: [0, -41]
                        });

                        const geoJSONLayer = L.geoJSON(geoJSONData, {
                            pointToLayer: function (feature, latlng) {
                                return L.marker(latlng, { icon: customIcon });
                            },
                            onEachFeature: function (feature, layer) {
                                layer.bindPopup(popupContent);
                            }
                        }).addTo(map);
                    });
                }
            })
            .catch(error => console.error('Error fetching map data:', error));
    }

    fetchMapData();

    document.querySelector('form').addEventListener('submit', function (e) {
        e.preventDefault();

        const startDate = document.getElementById('start').value;
        const endDate = document.getElementById('end').value;
        const types = [];
        if (document.getElementById('fullHighway').checked) types.push('Full highway closure');
        if (document.getElementById('partialHighway').checked) types.push('Partial highway closure');
        if (document.getElementById('streetLane').checked) types.push('Street and lane closure');
        if (document.getElementById('trail').checked) types.push('Trail closure');
        if (document.getElementById('ramp').checked) types.push('Ramp closure');
        if (document.getElementById('highImpact').checked) types.push('High-impact construction');
        if (document.getElementById('Cameras').checked) types.push('Cameras');

        map.eachLayer(function (layer) {
            if (layer instanceof L.TileLayer) return;
            map.removeLayer(layer);
        });

        fetchMapData(startDate, endDate, types);
    });
</script>


<!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js" integrity="sha384-/YR4Ck4OdCWrM+L4l9ibx4Ck4SOF4y4Ck4SOF4y4Ck4C2DgHfViXydVeLm+JDMZD" crossorigin="anonymous"></script> -->
<!-- ## sidebar scripts  -->
<script>
    fetch('/latest-closures')
      .then(response => response.json())
      .then(closures => {
          const sidebarList = document.getElementById('sidebarList');
  
          closures.forEach(closure => {
              const listItem = document.createElement('li');
              listItem.className = 'closure-item';
              
              const icon = document.createElement('span');
              icon.className = 'icon-box';
              icon.innerText = '🚧'; // Replace with your icon.
              listItem.appendChild(icon);
              
              const link = document.createElement('a');
              link.href = `/projects/${closure._id}`;
              link.innerText = closure.activityName;
              link.className = 'closure-link';
              listItem.appendChild(link);
              
              sidebarList.appendChild(listItem);
          });
      })
      .catch(error => console.error('Error fetching latest closures:', error));
  
  </script>
</body>
</html>
