<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Map</title>

    <!-- Bootstrap 5 CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KyZXEAg3QhqLMpG8r+8fhAXLRk2vvoC2f3B09zVXn8CA5QIVfZOJ3BCsw2P0p/We" crossorigin="anonymous">


<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />

<!-- Google Maps JavaScript API (Replace with your API Key) -->
<script src="https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
</head>
<body>


<div class="exp-map" style="width: 100vw">


    <div class="container mt-5">
                         <div class="row">
                        <div class="col-12 col-sm-12 col-md-2 order-md-1 order-2">
                            <form>
                                <div class="row">
                                    <div class="col-6 col-sm-6 col-md-12 mt-2">
                                        <div class="form-group">
                                            <label><strong>Start Date</strong></label>
                                            <input type="date" class="form-control" id="start" />
                                        </div>
                                    </div>
                
                                    <div class="col-6 col-sm-6 col-md-12 mt-2">
                                        <div class="form-group">
                                            <label><strong>End Date</strong></label>
                                            <input type="date" class="form-control" id="end" />
                                        </div>
                                    </div>
                                </div>
                
                                <div class="form-group d-flex flex-column mt-4 mb-4" id="constructionType">
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="all">
                                        <label class="form-check-label" for="all">All</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="fullHighway">
                                        <label class="form-check-label" for="fullHighway">Full highway closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="partialHighway">
                                        <label class="form-check-label" for="partialHighway">Partial highway closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="streetLane">
                                        <label class="form-check-label" for="streetLane">Street and lane closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="trail">
                                        <label class="form-check-label" for="trail">Trail closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="ramp">
                                        <label class="form-check-label" for="ramp">Ramp closures</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="highImpact">
                                        <label class="form-check-label" for="highImpact">High-impact construction</label>
                                    </div>
                                    <div class="form-check">
                                        <input type="checkbox" class="form-check-input" id="cameras">
                                        <label class="form-check-label" for="cameras">Cameras</label>
                                    </div>
                                </div>
                                        
                                <button type="submit" class="btn-success greenBtn" style="background-color: rgb(0, 76, 63);
                                margin-bottom: 14px; align-self: center; border-radius: 5px;">Submit</button>
                            </form>
                        </div>
                
                        <div class="col-12 col-sm-12 col-md-10 order-md-2 order-1">
                            <div id="map" style="min-height: 750px; max-height: 755px; width: 100%;"></div>
                        </div>
                    </div>
                </div>
          

            <div class="col-md-9">
                <div id="map" style="height: 800px;"></div>
            </div>
        </div>
    </div>
    


</div>




 
<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>



<script>
    const map = L.map('map').setView([47.6407, -122.2971], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png').addTo(map);

    // Function to fetch map data and render it
    function fetchMapData(startDate = '', endDate = '', types = [], cameras = false) {
        let apiUrl = `/api/projects`;
        if (startDate || endDate || types.length > 0 || cameras) {
            apiUrl += `?startDate=${startDate}&endDate=${endDate}&types=${types.join(",")}&cameras=${cameras}`;
        }

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                if (data && data.length > 0) {
                    data.forEach(project => {
                        if (typeof project.mapData !== 'string') {
                            console.warn(`Invalid mapData for project with ID ${project._id}`);
                            return;
                        }
                        const geoJSONData = JSON.parse(project.mapData);
                        const formattedStartDate = moment(project.startDate).format('MM/DD/YYYY');
                        const formattedEndDate = moment(project.endDate).format('MM/DD/YYYY');
                        const timingFeaturesHTML = project.timingFeatures.map(feature => `
                            <img src="https://sr520construction.blob.core.windows.net/520-uploads/checked_mark.png" alt="Checked Mark" width="25" height="25">
                            ${feature}
                            `).join(' '); 
                                                   
                        const popupContent = `
                          <div class="popup-content">
                                <h5 style='font-size: 18px; color: #007b5f; font-weight: 600; padding: 4px;'>${project.activityName}</h5>
                                <p><span style="font-weight: 600">Start:</span> ${formattedStartDate}<br>
                                <span style="font-weight: 600">End:</span> ${formattedEndDate}<br>
                                <span style="font-weight: 600">Time:</span> ${project.time}
                                </p>
                                <div class="timing-features mt-2 mb-4">${timingFeaturesHTML}</div>
                               <a href="/projects/${project._id}" class="greenBtn mt-3 mb-2" style="background-color: #cbdcb2; padding: 10px; color: #000; font-weight: 600; border-radius: 5px;" target="_blank">More information</a> 
                                <p class="mt-3">${project.description || "Not specified"}</p>
                                ${project.imageUrl ? `<img src="${project.imageUrl}" alt="Image for ${project.activityName}" class="img-fluid popup-image">` : ''}
                      
                            </div>
                        `;
                        const geoJSONLayer = L.geoJSON(geoJSONData, {
                            pointToLayer: function (feature, latlng) {
                                return L.marker(latlng);
                            },
                            onEachFeature: function (feature, layer) {
                                layer.bindPopup(popupContent);
                            }
                        }).addTo(map);
                    });
                }
            })
            .catch(error => console.error('Error fetching map data:', error));
    }

    // Initial fetch without filters
    fetchMapData();

    document.querySelector('form').addEventListener('submit', function (e) {
        e.preventDefault();

        // Get input values
        const startDate = document.getElementById('start').value;
        const endDate = document.getElementById('end').value;
        const types = [];
        if (document.getElementById('fullHighway').checked) types.push('Full highway closures');
        if (document.getElementById('partialHighway').checked) types.push('Partial highway closures');
        if (document.getElementById('streetLane').checked) types.push('Street and lane closures');
        if (document.getElementById('trail').checked) types.push('Trail closures');
        if (document.getElementById('ramp').checked) types.push('Ramp closures');
        if (document.getElementById('highImpact').checked) types.push('High-impact construction');
        const cameras = document.getElementById('cameras').checked;

        // Clear the current map data
        map.eachLayer(function (layer) {
            if (layer instanceof L.TileLayer) return;  // retain the tileLayer
            map.removeLayer(layer);
        });

        // Fetch the filtered data and update the map
        fetchMapData(startDate, endDate, types, cameras);
    });
</script>



<!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/js/bootstrap.min.js" integrity="sha384-/YR4Ck4OdCWrM+L4l9ibx4Ck4SOF4y4Ck4SOF4y4Ck4C2DgHfViXydVeLm+JDMZD" crossorigin="anonymous"></script> -->

</body>
</html>
